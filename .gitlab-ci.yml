default:  image: maven:3-openjdk-11stages:  - .pre  - build  - test  - analyze  - deploy  - .postvariables:  REPO_DIR: $CI_PROJECT_DIR/.repo  MVN_USR_HOME: /root/.m2  MVN_OPTS_TEST: -B -fae -s $CI_PROJECT_DIR/.m2/settings.xml -DskipTests=false -DskipITs=false -Dmaven.test.failure.ignore=true  MVN_OPTS_CLI: -B -fae -s $CI_PROJECT_DIR/.m2/settings.xml -DskipTests -DskipITs  MVN_CH_OPTS_TEST: -B -fae -s $CI_PROJECT_DIR/.m2/settings.xml -Dmaven.repo.local=$CI_PROJECT_DIR/.repo -DskipTests=false -DskipITs=false -Dmaven.test.failure.ignore=true  MVN_CH_OPTS_CLI: -B -fae -s $CI_PROJECT_DIR/.m2/settings.xml -Dmaven.repo.local=$CI_PROJECT_DIR/.repo -DskipTests -DskipITscache:  key: $CI_PROJECT_PATH_SLUG  paths:    - $REPO_DIR    - target.show_env: &show_env  - echo "show_env"  - printenv | sort.show_build: &show_build  - echo "show_build"  - find $CI_BUILDS_DIR -type d ! -regex ".+\.repo.*" ! -regex ".+\.git.*" -print.show_repo: &show_repo  - echo "show_repo"  - du --max-depth=1 -h $REPO_DIR.show_m2: &show_m2  - echo "show_m2"  - test -f $HOME/.m2/settings.xml && cat $HOME/.m2/settings.xml.show_pom: &show_pom  - echo "show_pom"  - mvn $MVN_CH_OPTS_CLI help:effective-pom.prep_repo: &prep_repo  - echo "creating $REPO_DIR"  - mkdir -p $REPO_DIR.prep_sec: &prep_sec  - mkdir -p $MVN_USR_HOME  - cp .m2/settings.xml $MVN_USR_HOMEbuild:  stage: build  tags:    - docker  before_script:    - *show_env    - *prep_repo  script:    - mvn $MVN_CH_OPTS_TEST clean verify    - mvn $MVN_CH_OPTS_CLI deploy  after_script:    - *show_build