default:
  image: maven:3-openjdk-11

include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml

stages:
  - .pre
  - build
  - test
  - analyze
  - deploy
  - .post

variables:
  REPO_DIR: $CI_PROJECT_DIR/.repo
  MVN_USR_HOME: /root/.m2
  MVN_TEST_OPTS: -DskipTests=false -DskipITs=false
  MVN_SIGN_OPTS: -P!generate-gpgkey -P!sign-jar
  MVN_REPO_OPTS: -B -s $CI_PROJECT_DIR/.m2/settings.xml -Dmaven.repo.local=$CI_PROJECT_DIR/.repo
  MVN_OPTS_BUILD: -fae -Dmaven.test.failure.ignore=true
  MVN_OPTS_CLI: -fae
  MVN_OPTS_SONAR: -Dsonar.qualitygate.wait=true -Dsonar.login=$SONAR_TOKEN_GITLAB
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  SONAR_TOKEN: "$SONAR_TOKEN_GITLAB"
  SONAR_HOST_URL: "$SONAR_HOST_GITLAB"
  GIT_DEPTH: "0"

cache:
  key: $CI_PROJECT_PATH_SLUG
  paths:
    - $REPO_DIR
    - .sonar/cache
    - target

.show_build: &show_build
  - echo "**** show_build ****"
  - find $CI_BUILDS_DIR -type d ! -regex ".+\.repo.*" ! -regex ".+\.git.*" ! -regex ".+\.sonar.*" -print

.show_env: &show_env
  - echo "**** show_env ****"
  - printenv | sort

.show_m2: &show_m2
  - echo "**** show_m2 ****"
  - test -f $HOME/.m2/settings.xml && cat $HOME/.m2/settings.xml

.show_pom: &show_pom
  - echo "**** show_pom ****"
  - mvn $MVN_CH_OPTS_CLI help:effective-pom

.show_repo: &show_repo
  - echo "**** show_repo ****"
  - du --max-depth=1 -h $REPO_DIR

.prep_repo: &prep_repo
  - echo "**** prepare repo $REPO_DIR ****"
  - mkdir -p $REPO_DIR

.prep_sec: &prep_sec
  - echo "**** prepare mvnuser home $MVN_USR_HOME ****"
  - mkdir -p $MVN_USR_HOME
  - cp .m2/settings.xml $MVN_USR_HOME

code_quality:
  artifacts:
    paths: [gl-code-quality-report.json]
  rules:
    - if: $CODE_QUALITY_DISABLED
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run code quality job in merge request pipelines
    - if: $CI_COMMIT_BRANCH == "develop"               # Run code quality job in pipelines on the DEVELOP branch (but not in other branch pipelines)
    - if: $CI_COMMIT_TAG                               # Run code quality job in pipelines for tags

code_quality_html:
  extends: code_quality
  variables:
    REPORT_FORMAT: html
  artifacts:
    paths: [gl-code-quality-report.html]

sonarcloud:
  stage: analyze
  script:
    - mvn $MVN_REPO_OPTS $MVN_SIGN_OPTS $MVN_TEST_OPTS $MVN_OPTS_SONAR sonar:sonar
  allow_failure: true
  needs: ["build"]
  rules:
    - if: $SONAR_DISABLED
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run job in merge request pipelines
    - if: $CI_COMMIT_BRANCH == "develop"               # Run job in pipelines on the DEVELOP branch
    - if: $CI_COMMIT_BRANCH == "master"                # Run job in pipelines on the MASTER branch

build:
  stage: build
  tags:
    - docker
  before_script:
    - *show_env
    - *prep_repo
  script:
    - mvn $MVN_REPO_OPTS $MVN_SIGN_OPTS $MVN_TEST_OPTS $MVN_OPTS_BUILD clean deploy
  after_script:
    - *show_build
