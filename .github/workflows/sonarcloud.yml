name: sonarcloud-analysis

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
    paths-ignore:
      # - '.github/**'
      - '.run/**'
      # - '.m2/**'
      - '.repo/**'


env:
  # Github Additional Configuration
  GITHUB_REPO_NAME: ${{ github.event.repository.name }}
  GITHUB_ACTOR: ${{ github.actor }}
  GITHUB_PROJECT_DIR: ${{ github.workspace }}
  GITHUB_TARGET_DIR: ${{ github.workspace }}/target
  GITHUB_UPLOAD_DIR: ${{ github.workspace }}/staging
  GITHUB_UPLOAD_NAME: ${{ github.event.repository.name }}.zip
  GITHUB_BRANCH_NAME: ${{ github.ref_name }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PCK_READ_TOKEN: ${{ secrets.PCK_READ_TOKEN }}
  PCK_WRITE_TOKEN: ${{ secrets.PCK_WRITE_TOKEN }}

  # Maven Common Configuration
  MVN_HOME_DIR: ~/.m2
  MVN_REPO_JOB_DIR: ${{ github.workspace }}/.repo
  MVN_SETT_OPTS: -V -B
  MVN_SETS_OPTS: -V -B -s "${{ github.workspace}}/.m2/settings.xml"
  MVN_REPO_OPTS: -Dmaven.repo.local="${{ github.workspace}}/.repo"
  MVN_BUILD_OPTS: -fae -Dmaven.test.failure.ignore=true
  MVN_CLI_OPTS: -ff
  MVN_DEPLOY_OPTS: -DretryFailedDeploymentCount=10
  MVN_DISTRIB_URL: https://maven.pkg.github.com
  MVN_DISTRIB_REPO_SS: The-oGlow/Awesome-Snap-Shots
  MVN_DISTRIB_REPO_REL: The-oGlow/Central-Awesome-Index
  CHK_FILE: com/glowa-net/maven/parent/global-appl-pom/3-SNAPSHOT/maven-metadata.xml
  CHK_FUNC: echo SUCCESS || echo FAIL

  # Maven Sign Configuration
  MVN_SIGN_OPTS: -P!generate-gpgkey -P!sign-jar

  # Maven Test Configuration
  MVN_TEST_OPTS_N: -DskipTests=true -DskipITs=true
  MVN_TEST_OPTS_Y: -DskipTests=false -DskipITs=false

  # Sonarcloud Configuration
  MVN_SONAR_OPTS: -Dmaven.test.failure.ignore=true -Dsonar.qualitygate.wait=true -Dsonar.login=${{ secrets.SONAR_TOKEN }}
  SONAR_CACHE_DIR: ~/.sonar/cache
  SONAR_HOST_URL: "https://sonarcloud.io"
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  sonarcloud:
    strategy:
      matrix:
        os: [ubuntu-latest]
        version: [11]
        distribution: [adopt]
    runs-on: ${{ matrix.os }}

    steps:
      #      - name: validate deploy repos
      #        run: |
      #          curl -fH "Authorization: Bearer ${{ secrets.PCK_READ_TOKEN }}"  "${{ env.MVN_DISTRIB_URL }}/${{ env.MVN_DISTRIB_REPO_SS }}/${{ env.CHK_FILE }}" && ${{ env.CHK_FUNC }}
      #          curl -fH "Authorization: Bearer ${{ secrets.PCK_WRITE_TOKEN }}" "${{ env.MVN_DISTRIB_URL }}/${{ env.MVN_DISTRIB_REPO_SS }}/${{ env.CHK_FILE }}" && ${{ env.CHK_FUNC }}
      #          curl -f -u "${{ env.GITHUB_ACTOR }}:${{ secrets.PCK_WRITE_TOKEN }}" "${{ env.MVN_DISTRIB_URL }}/${{ env.MVN_DISTRIB_REPO_SS }}/${{ env.CHK_FILE }}" && ${{ env.CHK_FUNC }}
      #          curl -f -u "${{ env.GITHUB_ACTOR }}:${{ secrets.GITHUB_TOKEN }}" "${{ env.MVN_DISTRIB_URL }}/${{ env.MVN_DISTRIB_REPO_SS }}/${{ env.CHK_FILE }}" && ${{ env.CHK_FUNC }}

      - name: checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0

      - name: show env
        run: |
          echo "**** show_env ****"
          printenv | sort

      - name: setup JDK
        uses: actions/setup-java@v3.5.0
        with:
          java-version: '${{ matrix.version }}'
          distribution: '${{ matrix.distribution }}'
          architecture: x64

      - name: cache maven packages
        uses: actions/cache@v3.0.8
        with:
          path: ${{ env.MVN_HOME_DIR }}
          key: ${{ matrix.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ matrix.os }}-m2

      #- name: maven settings
      #  uses: s4u/maven-settings-action@v2.6.0
      #  with:
      #          servers: '[{"id": "coding.github.ss", "username": "${env.GITHUB_ACTOR}", "password": "${env.GITHUB_TOKEN}"}, {"id": "coding.github.ss.deploy", "username": "${env.GITHUB_ACTOR}", "password": "${env.GITHUB_TOKEN}"}]'
      #  with:
      #    servers: '[{ "id": "coding.github.ss",  "username": "${{ github.github_actor }}", "configuration": { "httpHeaders": { "property": { "name": "Authorization", "value": "Bearer ${{ secrets.PCK_READ_TOKEN }}" }}}}, { "id": "coding.github.ss.deploy",  "username": "${{ github.github_actor }}", "configuration": { "httpHeaders": { "property": { "name": "Authorization", "value": "Bearer ${{ secrets.PCK_WRITE_TOKEN }}" }}}}]'

      #- name: show settings
      #  run: cat ${{ env.MVN_HOME_DIR }}/settings.xml

      - name: show settings
        run: cat ${{ github.workspace}}/.m2/settings.xml

      - name: cache sonarcloud packages
        uses: actions/cache@v3.0.8
        with:
          path: ${{ env.SONAR_CACHE_DIR }}
          key: ${{ matrix.os }}-sonar
          restore-keys: ${{ matrix.os }}-sonar

      - name: sonarcloud scan
        run: mvn ${{ env.MVN_SETS_OPTS }} ${{ env.MVN_SIGN_OPTS }} ${{ env.MVN_TEST_OPTS_Y }} ${{ env.MVN_SONAR_OPTS }} help:active-profiles verify sonar:sonar
